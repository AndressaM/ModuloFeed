-- MySQL Script generated by MySQL Workbench
-- 09/13/16 00:05:24
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Notification
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Notification
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Notification` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Notification` ;

-- -----------------------------------------------------
-- Table `Notification`.`Notify`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Notification`.`Notify` (
  `idUser` INT NOT NULL,
  `description` VARCHAR(50) NOT NULL,
  `dateBegin` DATE NOT NULL,
  `status` TINYINT(1) NOT NULL,
  `likes` INT NULL,
  `coments` MEDIUMTEXT NULL,
  PRIMARY KEY (`idUser`),
  UNIQUE INDEX `idUser_UNIQUE` (`idUser` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Notification`.`NotifyEvent`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Notification`.`NotifyEvent` (
  `idUser` INT NOT NULL,
  `description` VARCHAR(50) NOT NULL,
  `dateBegin` DATE NOT NULL,
  `dateEnd` DATE NOT NULL,
  `status` TINYINT(1) NOT NULL,
  `likes` INT NULL,
  `coments` MEDIUMTEXT NULL,
  INDEX `idUser_idx` (`idUser` ASC),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Notification`.`NotifyFriendship`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Notification`.`NotifyFriendship` (
  `idUser` INT NOT NULL,
  `description` VARCHAR(50) NOT NULL,
  `dateBegin` DATE NOT NULL,
  `status` TINYINT(1) NOT NULL,
  `likes` INT NULL,
  `coments` MEDIUMTEXT NULL,
  `message` MEDIUMTEXT NULL,
  INDEX `idUser_idx` (`idUser` ASC),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Notification`.`NotifyMessage`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Notification`.`NotifyMessage` (
  `idUser` INT NOT NULL,
  `description` VARCHAR(50) NOT NULL,
  `dateBegin` DATE NOT NULL,
  `status` TINYINT(1) NOT NULL,
  `likes` INT NULL,
  `coments` MEDIUMTEXT NULL,
  `message` MEDIUMTEXT NULL,
  INDEX `idUser_idx` (`idUser` ASC),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Notification`.`Notify_has_Notify`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Notification`.`Notify_has_Notify` (
  `Notify_idUser` INT NOT NULL,
  `Notify_idUser1` INT NOT NULL,
  PRIMARY KEY (`Notify_idUser`, `Notify_idUser1`),
  INDEX `fk_Notify_has_Notify_Notify2_idx` (`Notify_idUser1` ASC),
  INDEX `fk_Notify_has_Notify_Notify1_idx` (`Notify_idUser` ASC),
  CONSTRAINT `fk_Notify_has_Notify_Notify1`
    FOREIGN KEY (`Notify_idUser`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notify_has_Notify_Notify2`
    FOREIGN KEY (`Notify_idUser1`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Notification`.`Notify_has_Notify1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Notification`.`Notify_has_Notify1` (
  `Notify_idUser` INT NOT NULL,
  `Notify_idUser1` INT NOT NULL,
  PRIMARY KEY (`Notify_idUser`, `Notify_idUser1`),
  INDEX `fk_Notify_has_Notify1_Notify2_idx` (`Notify_idUser1` ASC),
  INDEX `fk_Notify_has_Notify1_Notify1_idx` (`Notify_idUser` ASC),
  CONSTRAINT `fk_Notify_has_Notify1_Notify1`
    FOREIGN KEY (`Notify_idUser`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notify_has_Notify1_Notify2`
    FOREIGN KEY (`Notify_idUser1`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Notification`.`Notify_has_Notify2`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Notification`.`Notify_has_Notify2` (
  `Notify_idUser` INT NOT NULL,
  `Notify_idUser1` INT NOT NULL,
  PRIMARY KEY (`Notify_idUser`, `Notify_idUser1`),
  INDEX `fk_Notify_has_Notify2_Notify2_idx` (`Notify_idUser1` ASC),
  INDEX `fk_Notify_has_Notify2_Notify1_idx` (`Notify_idUser` ASC),
  CONSTRAINT `fk_Notify_has_Notify2_Notify1`
    FOREIGN KEY (`Notify_idUser`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Notify_has_Notify2_Notify2`
    FOREIGN KEY (`Notify_idUser1`)
    REFERENCES `Notification`.`Notify` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
